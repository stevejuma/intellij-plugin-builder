<idea-plugin>
    <id>RecordBuilder</id>
    <name>Record Builder</name>
    <vendor email="steve@os.ju.ma" url="https://github.com/stevejuma/recordbuilder">Steve Juma</vendor>
    <description><![CDATA[
    <body>
        <p>
        The <strong>Record Builder</strong> Plugin for IntelliJ offers an effortless way to use
        the Builder Pattern in your Java code. This plugin allows you to automatically generate builder classes for
        your Java Records, JavaBeans and Interfaces, allowing you to select fields and configure the generated builder
        </p>

        <p><strong>Key Features:</strong></p>

        <ul>
            <li><strong>Automatic Generation:</strong> Automatically create builder classes for your Java Records, Java Beans and Interfaces.</li>
            <li><strong>Flexible Configuration:</strong> Choose the fields that will be generated and create validators for fields annotated as Null/NotNull</li>
            <li><strong>Seamless Integration:</strong> Access the plugin via the familiar IntelliJ "Generate" menu.</li>
            <li><strong>Time Savings:</strong> Accelerate development by automating repetitive tasks.</li>
            <li><strong>Repeatable:</strong> Preserves any custom changes you make to your builder methods when re-generating the builder</li>
            <li><strong>Editable:</strong> Adds button to remove fields from the builder</li>
            <li><strong>Validates Records:</strong> Ensures Null validation on record fields is added to the canonical constructor</li>
            <li><strong>Validates Build Method</strong> Adds inspection for builder fields to notify when required fields are missing</li>
        </ul>

        <p>With the <strong>Builder Pattern Generator</strong> Plugin for IntelliJ, you can boost productivity while ensuring
        your code remains well-structured and easily maintainable.
        </p>

        <p><strong>Note:</strong> This plugin is particularly useful for working with record classes and significantly
        enhances the readability and maintainability of your Java code.</p>
    </body>
    ]]>
    </description>
    <version>1.0</version>
    <depends>com.intellij.modules.java</depends>

    <change-notes><![CDATA[
    <ul>
      <li>24.05.06 - 1.0.5 - Add inspection for missing fields & using IDE null annotations configuration</li>
      <li>24.05.03 - 1.0.4 - Update Logic for regenerating existing methods</li>
      <li>24.05.02 - 1.0.0 - Initial release</li>
    </ul>
  ]]>
    </change-notes>
    <actions>
        <!-- `text` is the value you will see in the generate menu -->
        <action id="ma.ju.intellij.builder.ide.RecordBuilderAction"
                class="ma.ju.intellij.builder.ide.RecordBuilderAction"
                text="Create Builder..."
                description="Generate a Builder"
        >
            <add-to-group group-id="GenerateGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift alt B"/>
        </action>
        <action id="ma.ju.intellij.builder.ide.DeleteBuilderAction"
                class="ma.ju.intellij.builder.ide.DeleteBuilderAction"
                text="Delete Builder"
                description="Delete Builder From Class"
        >
            <add-to-group group-id="GenerateGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift alt D"/>
        </action>
    </actions>
    <extensions defaultExtensionNs="com.intellij">
        <localInspection language="JAVA"
                         bundle="messages.InspectionBundle"
                         key="inspection.record.builder.missing.required.display.name"
                         groupPath="Java"
                         groupBundle="messages.InspectionsBundle"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="ma.ju.intellij.builder.inspection.BuilderMissingRequiredFieldsInspection"/>
    </extensions>
</idea-plugin>